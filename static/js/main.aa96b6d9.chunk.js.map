{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["styled","div","Text","Section","Link","a","Heading","Chronology","JobTitle","Body","Institution","Document","Name","Title","className","name","email","phone","flexGrow","element","flexDirection","justifyContent","height","href","alignItems","minHeight","Headline","children","Company","timespan","width","Job","title","Degree","school","degree","year","App","text","from","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa96b6d9.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Flexbox from 'flexbox-react';\nimport * as text from './text.json';\nimport './font.css';\n\nconst textColor = '#cecece';\nconst titleColor = '#082678';\nconst headlineColor = '#202123';\nconst backgroundColor = '#2b2f36';\nconst leftMargin = '34pt';\nconst rightMargin = leftMargin;\nconst topMargin = '0px';\n\nconst centerJustify = true;\n\nconst PageBreak = styled.div`\n  @media print {\n    page-break-after: always;\n    break-after: page;\n  }\n`;\nconst Text = styled.div`\n  display: flex;\n  font-family: 'Cairo', sans-serif;\n  font-size: 14pt;\n  @media print {\n    font-size: 12pt;\n  }\n`;\nconst Section = styled.div`\n  padding-left: ${leftMargin};\n  padding-right ${rightMargin};\n  @media print {\n    break-inside: avoid;\n  }\n  max-width: 1080px;\n  width: calc(100% - ${leftMargin} - ${rightMargin});\n`;\nconst Link = styled.a`\n  color: ${textColor};\n`;\nconst Heading = styled(Text)`\n  font-size: 24pt;\n  @media print {\n    font-size: 20pt;\n  }\n`;\nconst Chronology = styled(Text)`\n  font-style: italic;\n`;\nconst JobTitle = styled(Text)`\n  font-size: 18pt;\n  @media print {\n    font-size: 16pt;\n  }\n`;\nconst Body = styled(Text)`\n  line-height: 17pt;\n`;\nconst Institution = styled(Text)`\n  font-size: 18pt;\n  @media print {\n    font-size: 16pt;\n  }\n`;\nconst Document = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${centerJustify && 'align-items: center;'}\n  background-color: ${backgroundColor};\n  color: ${textColor};\n  @page {\n    size: letter portrait;\n    margin: 34pt 0pt;\n  }\n  @media print {\n    a {\n      color: #000;\n    }\n    color: #000;\n    background-color: #fff;\n  }\n  font-family: 'Cairo', sans-serif;\n  font-size: 14pt;\n  width: 100%;\n`;\n\nconst Name = styled(Text)`\n  font-size: 48pt;\n  font-family: 'Dosis', sans-serif;\n`;\nconst Title = styled(({ className, name, email, phone }) => {\n  return (\n    <Flexbox className={className}>\n      <Flexbox flexGrow={centerJustify ? 1 : 0} />\n      <Flexbox element={Section} flexDirection=\"row\" className={className}>\n        <Flexbox flexDirection=\"column\" justifyContent=\"center\">\n          <Name>{name}</Name>\n          <Flexbox element={Body} height=\"1em\">\n            <Link href={`mailto:${email}`}>{email}</Link>\n          </Flexbox>\n        </Flexbox>\n        <Flexbox flexGrow={1} />\n        <Flexbox\n          flexDirection=\"column\"\n          justifyContent=\"flex-start\"\n          alignItems=\"flex-end\"\n        >\n          <Flexbox height=\"10pt\" />\n          <Body>283 Stonehenge Drive</Body>\n          <Body>Washington, MO 63090</Body>\n          <Flexbox height=\"5pt\" />\n          <Body>{phone}</Body>\n          <Flexbox flexGrow={1} minHeight=\"16pt\" />\n          <Body>\n            <Link href=\"https://github.com/kevinvanleer\">\n              https://github.com/kevinvanleer\n            </Link>\n          </Body>\n          <Body>\n            <Link href=\"https://www.linkedin.com/in/kevin-vanleer/\">\n              https://www.linkedin.com/in/kevin-vanleer/\n            </Link>\n          </Body>\n          <Flexbox height=\"12pt\" />\n        </Flexbox>\n      </Flexbox>\n      <Flexbox flexGrow={1} />\n    </Flexbox>\n  );\n})`\n  width: 100%;\n  background-color: ${titleColor};\n  padding-top: ${topMargin};\n  white-space: nowrap;\n  @media print {\n    font-size: 42pt;\n  }\n`;\nconst Headline = styled(({ className, children }) => (\n  <Flexbox className={className}>\n    <Flexbox flexGrow={centerJustify ? 1 : 0} />\n    <Flexbox element={Section} flexDirection=\"row\">\n      {children}\n    </Flexbox>\n    <Flexbox flexGrow={1} />\n  </Flexbox>\n))`\n  width: 100%;\n  margin-bottom: 1em;\n  background-color: ${headlineColor};\n  align-items: center;\n  padding-top: 1em;\n  padding-bottom: 1em;\n  font-size: 20pt;\n  line-height: 22pt;\n  @media print {\n    font-size: 18pt;\n    line-height: 18pt;\n    margin-bottom: 0;\n  }\n`;\n\nconst Company = ({ name, timespan }) => (\n  <Flexbox alignItems=\"baseline\">\n    <Heading>{name}</Heading>\n    <Flexbox width=\"1em\" />\n    <Chronology>{timespan}</Chronology>\n  </Flexbox>\n);\nconst Job = ({ title, timespan, children }) => (\n  <Flexbox flexDirection=\"column\">\n    <Flexbox alignItems=\"baseline\">\n      <JobTitle>{title}</JobTitle>\n      <Flexbox width=\"1em\" />\n      <Chronology>{timespan}</Chronology>\n    </Flexbox>\n    <Body>{children}</Body>\n    <Flexbox height=\"1em\" />\n  </Flexbox>\n);\nconst Degree = ({ school, degree, year }) => (\n  <Flexbox flexDirection=\"column\">\n    <Institution>{school}</Institution>\n    <Flexbox alignItems=\"baseline\">\n      <Body>{degree}</Body>\n      <Flexbox width=\"1em\" />\n      <Chronology>{year}</Chronology>\n    </Flexbox>\n    <Flexbox height=\"1em\" />\n  </Flexbox>\n);\n\nfunction App() {\n  return (\n    <Document>\n      <Title\n        name={text.title}\n        email=\"kevin.vanleer@gmail.com\"\n        phone=\"314-323-2294\"\n      />\n      <Headline>{text.headline}</Headline>\n      <Section>\n        <Body>\n          Kevin spent the past 2 years leading the product development effort at\n          Conduce, a cloud deployed data visualization SaaS. He diligently\n          focused on empowering users, enabling them to build visualizations and\n          see their business operations through data, as it happened in time and\n          space, recognize patterns, and perform analysis in ways they never\n          thought possible.\n        </Body>\n      </Section>\n      <Section>\n        <Company name=\"Conduce\" timespan=\"2014-2019\" />\n        <Job\n          title=\"Director of Product Development\"\n          timespan=\"Sep 2017 - Oct 2019\"\n          from=\"Sep 2017\"\n          to=\"Oct 2019\"\n        >\n          Kevin was responsible for development and maintenance of the Conduce\n          SAAS platform. He owned the product roadmap and backlog. Kevin led the\n          company out of deep technical debt, improved quality, and delivered\n          value to customers. Kevin also functioned as the facilitator of the\n          software development team and lead user interface designer. He also\n          wrote code in JavaScript, Python, and Go.\n        </Job>\n        <Job title=\"Senior Software Engineer\" timespan=\"Dec 2014 - Sep 2017\">\n          Kevin served both as a delivery engineer and a platform engineer. He\n          developed platform features and exploited those features to build\n          solutions for customers to help them reach desired business outcomes.\n          He met regularly with customers to gather requirements and demonstrate\n          product capabilities. Kevin developed an application to deliver\n          visualization features that were not part of the platform offering. He\n          also developed a time control feature that was later incorporated into\n          the softare platform. In addition, Kevin worked with company\n          leadership bring about positive change in product development\n          practices.\n        </Job>\n      </Section>\n      <Section>\n        <Company name=\"Boeing\" timespan=\"2004-2014\" />\n        <Job title=\"Software Engineer\" timespan=\"2004-2014\">\n          Kevin spearheaded development of Voice Communication System, a\n          peer-to-peer radio simulation and voice communications software suite.\n          He led the development team and was responsible for overall product\n          design. Kevin and his team proved value in a matter of months,\n          offsetting significant installation costs by replacing a\n          commercial-off-the-shelf system. Kevin went on to deploy the solution\n          in several facilities, reducing setup and maintenance costs for\n          simulation events.\n        </Job>\n      </Section>\n      <Section>\n        <Heading>Volunteer</Heading>\n        <Job title=\"Soccer coach\" timespan=\"2018-present\">\n          Work with a great group of 2nd and 3rd grade girls. Teaching them the\n          value of teamwork and fair play.\n        </Job>\n        <Job title=\"FIRST LEGO League coach\" timespan=\"2015-2016\">\n          Facilitated a team of 10 hardworking 5th (and then 6th) graders in\n          their pursuit to master the FIRST LEGO League challenge.\n        </Job>\n      </Section>\n      <Section>\n        <Heading>Education</Heading>\n        <Degree\n          school=\"Missouri University of Science and Technology\"\n          degree=\"Bachelor of Computer Engineering\"\n          year=\"2004\"\n        />\n      </Section>\n    </Document>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}